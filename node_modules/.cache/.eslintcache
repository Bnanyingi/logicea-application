[{"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/index.tsx":"1","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/reportWebVitals.ts":"2","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/App.tsx":"3","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/Table.tsx":"4","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/FilterSorting.tsx":"5","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/Form.tsx":"6","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/Login.tsx":"7","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/DarkModeToggle.tsx":"8","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/Logout.tsx":"9"},{"size":648,"mtime":1686244621387,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1685773476618,"results":"12","hashOfConfig":"11"},{"size":205,"mtime":1686244828728,"results":"13","hashOfConfig":"11"},{"size":8078,"mtime":1686217036513,"results":"14","hashOfConfig":"11"},{"size":1592,"mtime":1685954355182,"results":"15","hashOfConfig":"11"},{"size":3310,"mtime":1686244639633,"results":"16","hashOfConfig":"11"},{"size":1444,"mtime":1686204547849,"results":"17","hashOfConfig":"11"},{"size":573,"mtime":1686126463459,"results":"18","hashOfConfig":"11"},{"size":368,"mtime":1686217050040,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"18nojus",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/index.tsx",[],[],[],"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/reportWebVitals.ts",[],[],"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/App.tsx",[],[],"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/Table.tsx",["49","50","51"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./Table.css\";\nimport FilterSorting from \"./FilterSorting\";\nimport Form from \"./Form\";\nimport axios from \"axios\";\n// import NewForm from \"./NewForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport DarkModeToggle from \"./DarkModeToggle\";\nimport { format } from \"date-fns\";\nimport Cookies from \"js-cookie\";\nimport Logout from \"./Logout\";\nimport Login from \"./Login\";\n\nexport interface Joke {\n  id?: number;\n  Title: string;\n  Body: string;\n  Author: string;\n  Views: number;\n  CreatedAt: number;\n}\n\nconst Table: React.FC = () => {\n  const [token, setToken] = useState<string | null>(localStorage.getItem(\"token\") || null);\n  const [jokes, setJokes] = useState<Joke[]>([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [totalItems, setTotalItems] = useState(0);\n  const [filterBy, setFilterBy] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"\");\n  const [selectedJoke, setSelectedJoke] = useState<Joke | null>(null);\n  const [showForm, setShowForm] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const navigate = useNavigate();\n\n  const handleAddNewJoke = () => {\n    setSelectedJoke(null);\n    setShowForm(true);\n    // navigate(\"/form\");\n  };\n\n  const handleFormSubmit = async (updatedJoke: Joke) => {\n    try {\n      const response = await axios.put(\n        `https://retoolapi.dev/zu9TVE/jokes/${updatedJoke.id}`,\n        updatedJoke\n      );\n      const updatedJokes = jokes.map((joke) =>\n        joke.id === updatedJoke.id ? response.data : joke\n      );\n      setJokes(updatedJokes);\n      setSelectedJoke(null);\n      setShowForm(false);\n    } catch (error) {\n      console.error(\"Error updating joke:\", error);\n    }\n  };\n\n  const handleEdit = (joke: Joke) => {\n    setSelectedJoke(joke);\n    setShowForm(true);\n    // navigate(\"/form\");\n  };\n\n  const handleAddJoke = async (newJoke: Joke) => {\n    try {\n      const response = await axios.post(\n        \"https://retoolapi.dev/zu9TVE/jokes\",\n        newJoke\n      );\n      const addedJoke = response.data;\n      const updatedJokes = [...jokes, addedJoke];\n      setJokes(updatedJokes);\n      setShowForm(false);\n    } catch (error) {\n      console.error(\"Error adding joke:\", error);\n    }\n  };\n\n  const handleFormClose = () => {\n    setSelectedJoke(null);\n    setShowForm(false);\n  };\n\n  const handleFormDelete = async () => {\n    try {\n      if (selectedJoke) {\n        await axios.delete(\n          `https://retoolapi.dev/zu9TVE/jokes/${selectedJoke.id}`\n        );\n        const updatedJokes = jokes.filter(\n          (joke) => joke.id !== selectedJoke.id\n        );\n        setJokes(updatedJokes);\n        setSelectedJoke(null);\n        setShowForm(false);\n      }\n    } catch (error) {\n      console.error(\"Error deleting joke:\", error);\n    }\n  };\n\n  const handleFilterSort = (filterBy: string, sortBy: string) => {\n    setFilterBy(filterBy);\n    setSortBy(sortBy);\n  };\n\n  const fetchJokes = async () => {\n    try {\n      let apiUrl = `https://retoolapi.dev/zu9TVE/jokes?_page=${currentPage}&_limit=${itemsPerPage}`;\n\n      if (filterBy) {\n        switch (filterBy) {\n          case \"lessThan50\":\n            apiUrl += \"&Views_lte=50\";\n            break;\n          case \"between50And100\":\n            apiUrl += \"&Views_gte=50&Views_lte=100\";\n            break;\n          case \"moreThan100\":\n            apiUrl += \"&Views_gte=100\";\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (sortBy) {\n        apiUrl += `&_sort=Views&_order=${sortBy === \"asc\" ? \"asc\" : \"desc\"}`;\n      }\n\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setJokes(data);\n      setTotalItems(parseInt(response.headers.get(\"X-Total-Count\") || \"0\", 10));\n    } catch (error) {\n      console.error(\"Error fetching jokes:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    const storedUsername = localStorage.getItem(\"username\");\n  \n    if (storedToken || storedUsername) {\n      const newToken = storedToken || storedUsername;\n      setToken(newToken);\n      \n      if (newToken !== null) {\n        localStorage.setItem(\"token\", newToken);\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    fetchJokes();\n  }, [currentPage, itemsPerPage, filterBy, sortBy]);\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [isDarkMode]);\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage((prevPage) => prevPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    const maxPage = Math.ceil(totalItems / itemsPerPage);\n    if (currentPage < maxPage) {\n      setCurrentPage((prevPage) => prevPage + 1);\n    }\n  };\n\n  const handleItemsPerPageChange = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    setItemsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  const getViewsColor = (views: number): string => {\n    if (views >= 0 && views <= 25) {\n      return \"tomato\";\n    } else if (views >= 26 && views <= 50) {\n      return \"orange\";\n    } else if (views >= 51 && views <= 75) {\n      return \"yellow\";\n    } else if (views >= 76 && views <= 100) {\n      return \"green\";\n    } else {\n      return \"inherit\";\n    }\n  };\n\n  const handleDarkModeToggle = () => {\n    setIsDarkMode((prevMode) => !prevMode);\n  };\n\n  return (\n    <div>\n    {token ? (\n    <div>\n      <FilterSorting onFilterSort={handleFilterSort} />\n      <DarkModeToggle\n        isDarkMode={isDarkMode}\n        onDarkModeToggle={handleDarkModeToggle}\n      />\n      <div className=\"New-Joke\"></div>\n\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Author</th>\n              <th>Created Date</th>\n              <th>Views</th>\n            </tr>\n          </thead>\n          <tbody>\n            {jokes.map((joke) => (\n              <tr key={joke.id}>\n                <td>\n                  <a className=\"link-form\" onClick={() => handleEdit(joke)}>\n                    {joke.Title}\n                  </a>\n                </td>\n                <td>{joke.Author}</td>\n                <td>{joke.CreatedAt && format(new Date(joke.CreatedAt), \"dd MMM yyyy\")}</td>\n                <td style={{ color: getViewsColor(joke.Views) }}>\n                  {joke.Views}\n                </td>\n            \n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <button className=\"new-button\" onClick={handleAddNewJoke}>\n          Add New Joke\n        </button>\n\n        {showForm ? (\n          selectedJoke ? (\n            <Form\n              joke={selectedJoke}\n              onSubmit={handleFormSubmit}\n              onClose={handleFormClose}\n              onDelete={handleFormDelete}\n            />\n          ) : (\n            <Form onSubmit={handleAddJoke} onClose={handleFormClose} />\n          )\n        ) : null}\n        <div className=\"pagination-container\">\n          <button onClick={handlePrevPage} disabled={currentPage === 1}>\n            {\"<\"}\n          </button>\n          <span>Page {currentPage}</span>\n          <button\n            onClick={handleNextPage}\n            disabled={currentPage === Math.ceil(totalItems / itemsPerPage)}\n          >\n            {\">\"}\n          </button>\n        </div>\n        <div className=\"items-per-page-container\">\n          <label htmlFor=\"itemsPerPage\">Items per page:</label>\n          <select\n            className=\"selection-page\"\n            id=\"itemsPerPage\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPageChange}\n          >\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n      </div>\n      <Logout />\n    </div>\n     ) : (\n      <Login setToken={setToken} />\n    )}\n  </div>\n  );\n};\n\nexport default Table;\n","/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/FilterSorting.tsx",[],[],"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/Form.tsx",[],[],"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/Login.tsx",[],[],"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/DarkModeToggle.tsx",[],[],"/Users/barbaramwangi/Desktop/logicea-app/my-logicea-app/src/components/Logout.tsx",[],[],{"ruleId":"52","severity":1,"message":"53","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":159,"column":6,"nodeType":"58","endLine":159,"endColumn":51,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":232,"column":19,"nodeType":"62","endLine":232,"endColumn":77},"@typescript-eslint/no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchJokes'. Either include it or remove the dependency array.","ArrayExpression",["63"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"64","fix":"65"},"Update the dependencies array to be: [currentPage, itemsPerPage, filterBy, sortBy, fetchJokes]",{"range":"66","text":"67"},[4391,4436],"[currentPage, itemsPerPage, filterBy, sortBy, fetchJokes]"]